apply plugin: 'maven'
apply plugin: 'com.android.library'

repositories {
    mavenCentral()
    mavenLocal()
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    // To let the libs be included in other projects
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 23
        versionCode project.VERSION_CODE.toInteger()
        versionName project.VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    // TODO are these required in this lib project?
    //compile fileTree(include: ['*.jar'], dir: 'libs')
   //compile 'com.android.support:appcompat-v7:23.1.1'
   testCompile group: 'com.google.guava', name: 'guava', version: '19.0'
   testCompile 'junit:junit:4.12'
}

buildscript {
    System.properties['com.android.build.gradle.overrideVersionCheck'] = 'true'
    repositories {
        mavenCentral()
    	jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
    }
}

uploadArchives {
  repositories {
    mavenDeployer {
      //beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }


      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: hasProperty('ossrhUsername')?ossrhUsername:'', password: hasProperty('ossrhPassword')?ossrhPassword:'')
        //authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: hasProperty('ossrhUsername')?ossrhUsername:'', password: hasProperty('ossrhPassword')?ossrhPassword:'')
        //authentication(userName: ossrhUsername, password: ossrhPassword)
      }


      pom.project {
        name project.POM_NAME
        packaging 'jar'
        artifactId project.POM_ARTIFACT_ID
        groupId project.GROUP
        version project.VERSION_NAME
        // optionally artifactId can be defined here 
        description project.POM_ARTIFACT_ID
        //url 'https://github.com/joshjdevl/libsodium-jni'

        scm {
          connection 'scm:git@github.com:joshjdevl/libsodium-jni.git'
          developerConnection 'scm:git@github.com:joshjdevl/libsodium-jni.git'
          url 'https://github.com/joshjdevl/libsodium-jni'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'joshjdevl'
            name 'joshjdevl'
            email 'joshjdevl@gmail.com'
          }
        }
      }
    }
  }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives javadocJar, sourcesJar
}

